#cloud-config
users:
  - name: ubuntu
    groups: sudo
    shell: /bin/bash
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    ssh_authorized_keys:
      - "${ssh_key}"

package_update: true
packages:
  - docker.io
  - docker-compose-plugin
  - git

runcmd:
  # включаем и запускаем docker
  - systemctl enable docker
  - systemctl start docker

  # устанавливаем yc CLI
  - curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
  - echo 'export PATH=$HOME/yandex-cloud/bin:$PATH' > /etc/profile.d/yc_path.sh
  - chmod +x /etc/profile.d/yc_path.sh

  # сохраняем переменные окружения для DB
  - |
    # разбиваем строку db_secret_ids на массив
    IFS=',' read -r -a DB_SECRETS <<< "${db_secret_ids}"

    # клонируем репозиторий
    git clone --depth 1 --branch "${repo_branch}" "${repo_url}" /opt/app
    cd /opt/app/"${repo_path}"

    # настраиваем yc
    yc config set service-account-key /etc/cloud/key.json
    yc config set cloud-id "${cloud_id}"
    yc config set folder-id "${folder_id}"
    yc config set compute-default-zone "${zone}"

    # получаем секреты из Lockbox и экспортируем в /etc/profile.d/app_env.sh
    for secret_id in "${DB_SECRETS[@]}"; do
      name=$(yc lockbox secret get "$secret_id" --format json | jq -r '.name')
      value=$(yc lockbox secret version access latest \
        --secret-id "$secret_id" \
        --format json | jq -r '.entries[0].text_value')
      echo "export ${name}='${value}'" >> /etc/profile.d/app_env.sh
    done
    chmod +x /etc/profile.d/app_env.sh
    source /etc/profile.d/app_env.sh

  # подтягиваем и поднимаем контейнеры
  - cd /opt/app/"${repo_path}"
  - docker compose pull
  - docker compose up -d

final_message: "Is that really working? The app is up and running!"
