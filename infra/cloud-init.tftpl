#cloud-config

users:
  - name: ubuntu
    groups: sudo
    shell: /bin/bash
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    ssh_authorized_keys:
      - "${ssh_key}"

package_update: true

apt:
  sources:
    docker:
      source: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      key:
        url: https://download.docker.com/linux/ubuntu/gpg

packages:
  - git
  - jq

runcmd:
  # ─────────── 01. Docker CE & compose-plugin ───────────
  - curl -fsSL https://get.docker.com | sh
  - apt-get update
  - apt-get install -y docker-compose-plugin
  - systemctl enable docker
  - systemctl start docker

  # ─────────── 02. Устанавливаем yc от имени ubuntu ───────────
  - su - ubuntu -c "bash -eux -c 'curl -fsSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | sh'"

  # ─────────── 03. Глобально втыкаем yc в PATH ───────────
  - cp /home/ubuntu/yandex-cloud/bin/yc /usr/local/bin/yc

  # ─────────── 04. Настраиваем yc ───────────
  - /usr/local/bin/yc config set service-account-key /etc/cloud/key.json
  - /usr/local/bin/yc config set cloud-id      "${cloud_id}"
  - /usr/local/bin/yc config set folder-id     "${folder_id}"
  - /usr/local/bin/yc config set compute-default-zone "${zone}"

  # ─────────── 05. Клонируем ваш репозиторий ───────────
  - mkdir -p /opt/app
  - git clone --depth 1 --branch "${repo_branch}" "${repo_url}" /opt/app/"${repo_path}"
  - cd /opt/app/"${repo_path}"

  # ─────────── 06. Достаём секреты ───────────
  - |
    mkdir -p /etc/profile.d
    echo "#!/usr/bin/env bash" > /etc/profile.d/app_env.sh
    for s in db_host db_user db_password db_database db_table db_root_password; do
      secret_id="${!s}_secret_id"
      val=$( yc lockbox secret version access latest \
        --secret-id "${!secret_id}" \
        --format json | jq -r .entries[0].text_value )
      echo "export ${s^^}='$val'" >> /etc/profile.d/app_env.sh
    done
    chmod +x /etc/profile.d/app_env.sh

  # ─────────── 07. Поднимаем docker-compose ───────────
  - cd /opt/app/"${repo_path}"
  - docker compose pull
  - docker compose up -d

final_message: "✅ App is up and running!"
