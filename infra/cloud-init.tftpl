#cloud-config
write_files:
  - path: /home/ubuntu/.config/yandex-cloud/key.json
    owner: ubuntu:ubuntu
    permissions: "0600"
    encoding: b64
    content: |
      ${sa_key_b64}

users:
  - name: ubuntu
    groups: sudo
    shell: /bin/bash
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    ssh_authorized_keys:
      - "${ssh_key}"

package_update: true

apt:
  sources:
    docker:
      source: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      key:
        url: https://download.docker.com/linux/ubuntu/gpg

packages:
  - git
  - jq

runcmd:
  # ─────────── 01. Docker CE & compose-plugin ───────────
  - curl -fsSL https://get.docker.com | sh
  - apt-get update
  - apt-get install -y docker-compose-plugin
  - systemctl enable docker
  - systemctl start docker

  # ─────────── 02. Устанавливаем yc от имени ubuntu ───────────
  - su - ubuntu -c "bash -ex -c 'curl -fsSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash'"
  - test -x /home/ubuntu/yandex-cloud/bin/yc || echo "❌ yc install failed" >&2
  # ─────────── 03. Глобально втыкаем yc в PATH ───────────
  - cp /home/ubuntu/yandex-cloud/bin/yc /usr/local/bin/yc || true
  # убедимся, что yc на месте
  - which yc || echo "❌ yc not in PATH" >&2

  # ─────────── 04. Настраиваем yc ───────────
  - su - ubuntu -c "yc config set service-account-key /home/ubuntu/.config/yandex-cloud/key.json"
  - su - ubuntu -c "yc config set cloud-id ${cloud_id}"
  - su - ubuntu -c "yc config set folder-id ${folder_id}"
  - su - ubuntu -c "yc config set compute-default-zone ${zone}"

  # ─────────── 05. Клонируем  репозиторий ───────────
  - mkdir -p /opt/app
  - chown ubuntu:ubuntu /opt/app
  - su - ubuntu -c "git clone --depth 1 --branch \"${repo_branch}\" \"${repo_url}\" /opt/app || echo '❌ git clone failed' >&2"

  - mkdir -p /etc/profile.d
  - |
    cat <<'EOF' > /etc/profile.d/app_env.sh
    #!/usr/bin/env bash
    export DB_HOST="$(yc lockbox payload get ${db_host_secret_id} --format json \
      | jq -r '.entries[] | select(.key=="text_value")?.text_value // .entries[0].text_value')"
    export DB_USER="$(yc lockbox payload get ${db_user_secret_id} --format json \
      | jq -r '.entries[] | select(.key=="text_value")?.text_value // .entries[0].text_value')"
    export DB_PASSWORD="$(yc lockbox payload get ${db_password_secret_id} --format json \
      | jq -r '.entries[] | select(.key=="text_value")?.text_value // .entries[0].text_value')"
    export DB_DATABASE="$(yc lockbox payload get ${db_database_secret_id} --format json \
      | jq -r '.entries[] | select(.key=="text_value")?.text_value // .entries[0].text_value')"
    export DB_TABLE="$(yc lockbox payload get ${db_table_secret_id} --format json \
      | jq -r '.entries[] | select(.key=="text_value")?.text_value // .entries[0].text_value')"
    export DB_ROOT_PASSWORD="$(yc lockbox payload get ${db_root_password_secret_id} --format json \
      | jq -r '.entries[] | select(.key=="text_value")?.text_value // .entries[0].text_value')"
    EOF
  - chmod +x /etc/profile.d/app_env.sh
  #───────────  06. Запускаем docker-compose
  - 'su - ubuntu -c "cd /opt/app && docker compose up -d"'

final_message: "cloud-init finished at $(date +%Y-%m-%dT%H:%M:%S%z)."
