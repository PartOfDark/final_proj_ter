name: Docker Publish

on:
  push:
    branches:
      - master

jobs:
  tf:
    runs-on: ubuntu-latest

    # подхватываем AWS-креды для S3-бэкенда и YC-креды для CLI
    env:
      TF_IN_AUTOMATION:      true
      AWS_ACCESS_KEY_ID:     ${{ secrets.S3_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}
      AWS_DEFAULT_REGION:    ru-central1

      YC_SA_KEY_BS64: ${{ secrets.YC_SA_KEY_BS64 }}
      YC_CLOUD_ID:    ${{ secrets.YC_CLOUD_ID }}
      YC_FOLDER_ID:   ${{ secrets.YC_FOLDER_ID }}
      YC_ZONE:        ${{ secrets.YC_ZONE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set SSH public key
        run: echo "${{ secrets.SSH_PUB_KEY }}" > infra/ssh_pub.key

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.8.4"

      - name: Terraform Init
        run: terraform -chdir=infra init -input=false

      # ─────────── ШАГ 1: создаём только MDB-кластер ───────────
      - name: Terraform Apply MDB Cluster
        run: |
          terraform -chdir=infra apply \
            -auto-approve \
            -input=false \
            -lock=false \
            -target=yandex_mdb_mysql_cluster.db \
            -var="ssh_pub_key=${{ secrets.SSH_PUB_KEY }}" \
            -var="sa_key_b64=${{ secrets.YC_SA_KEY_BS64 }}" \
            -var="cloud_id=${{ secrets.YC_CLOUD_ID }}" \
            -var="folder_id=${{ secrets.YC_FOLDER_ID }}" \
            -var="zone=${{ secrets.YC_ZONE }}"

      # ─────────── ШАГ 2: ждём, пока кластер перейдёт в RUNNING ───────────
      - name: Install Yandex Cloud CLI & jq
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          sudo apt-get update && sudo apt-get install -y jq

      - name: Configure Yandex CLI
        run: |
          printf '%s' "$YC_SA_KEY_BS64" | base64 -d > key.json
          yc config set service-account-key key.json
          yc config set cloud-id $YC_CLOUD_ID
          yc config set folder-id $YC_FOLDER_ID
          yc config set compute-default-zone $YC_ZONE

      - name: Wait for MDB Cluster READY
        run: |
          CLUSTER_ID=$(terraform -chdir=infra output -raw cluster_id)
          echo "⏱  Waiting for cluster $CLUSTER_ID to become RUNNING…"
          until [[ "$(yc mdb mysql cluster get --cluster-id $CLUSTER_ID --format json \
                    | jq -r '.cluster.status')" == "RUNNING" ]]; do
            echo "  still not RUNNING — sleeping 20s"
            sleep 20
          done
          echo "✅ Cluster is RUNNING"

      # ─────────── ШАГ 3: создаём БД, пользователя и всё остальное ───────────
      - name: Terraform Apply Remaining Resources
        run: |
          terraform -chdir=infra apply \
            -auto-approve \
            -input=false \
            -lock=false \
            -var="ssh_pub_key=${{ secrets.SSH_PUB_KEY }}" \
            -var="sa_key_b64=${{ secrets.YC_SA_KEY_BS64 }}" \
            -var="cloud_id=${{ secrets.YC_CLOUD_ID }}" \
            -var="folder_id=${{ secrets.YC_FOLDER_ID }}" \
            -var="zone=${{ secrets.YC_ZONE }}"

  build-and-push:
    needs: tf
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore SA key from Base64
        shell: bash
        run: |
          printf '%s' "${{ secrets.YC_SA_KEY_BS64 }}" | base64 -d > key.json
          echo "YC_SERVICE_ACCOUNT_KEY_FILE=$(pwd)/key.json" >> $GITHUB_ENV

      - name: Install Yandex Cloud CLI
        shell: bash
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          # подхватит PATH для следующих шагов
          echo "PATH=$HOME/yandex-cloud/bin:$PATH" >> $GITHUB_ENV

      - name: Verify yc
        run: |
          which yc
          yc --version

      - name: Configure Yandex CLI
        run: |
          yc config set service-account-key key.json
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
          yc config set compute-default-zone ${{ secrets.YC_ZONE }}

      - name: Configure Docker to use Yandex Container Registry
        run: |
          yc container registry configure-docker


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Build and push Docker image with cache
        uses: docker/build-push-action@v3
        with:
          context: app                    
          file: app/Dockerfile.python     
          push: true                      
          tags: |
            cr.yandex/${{ secrets.YC_REGISTRY_ID }}/my-app:cache
            cr.yandex/${{ secrets.YC_REGISTRY_ID }}/my-app:${{ github.sha }}
          cache-from: type=registry,ref=cr.yandex/${{ secrets.YC_REGISTRY_ID }}/my-app:cache
          cache-to:   type=registry,ref=cr.yandex/${{ secrets.YC_REGISTRY_ID }}/my-app:cache,mode=max