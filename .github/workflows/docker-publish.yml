name: Docker Publish

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore SA key from Base64
        shell: bash
        run: |
          printf '%s' "${{ secrets.YC_SA_KEY_BS64 }}" | base64 -d > key.json
          echo "YC_SERVICE_ACCOUNT_KEY_FILE=$(pwd)/key.json" >> $GITHUB_ENV

      - name: Install Yandex Cloud CLI
        shell: bash
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          # подхватит PATH для следующих шагов
          echo "PATH=$HOME/yandex-cloud/bin:$PATH" >> $GITHUB_ENV

      - name: Verify yc
        run: |
          which yc
          yc --version

      - name: Configure Yandex CLI
        run: |
          yc config set service-account-key key.json
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
          yc config set compute-default-zone ${{ secrets.YC_ZONE }}
          yc container registry list \

      - name: List registries (debug)
        shell: bash
        run: |
          echo "Folder ID = ${{ secrets.YC_FOLDER_ID }}"
          yc container registry list \
            --folder-id "${{ secrets.YC_FOLDER_ID }}" \
            --format json \
          | jq -r '.[] | "\(.id) — \(.name)"'

      - name: Configure Docker to use Yandex Container Registry
        run: |
          yc container registry configure-docker

      - name: Build Docker image
        run: |
          IMAGE=cr.yandex/${{ secrets.YC_REGISTRY_ID }}/my-app:${{ github.sha }}
          docker build -t "$IMAGE" -f app/Dockerfile.python app/
          echo "Image tagged as $IMAGE"
          docker push "$IMAGE"

#todo: check local avelability of the registry
