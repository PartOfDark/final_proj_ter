name: Docker Publish

on:
  push:
    branches:
      - master

jobs:
  tf:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: true     
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure S3-backend credentials
      run: |
        mkdir -p ~/.aws
        cat <<EOF > ~/.aws/credentials.ini
        [default]
        aws_access_key_id = ${{ secrets.S3_ACCESS_KEY }}
        aws_secret_access_key = ${{ secrets.S3_SECRET_KEY }}
        EOF
        cat <<EOF > ~/.aws/config
        [default]
        region = ru-central1
        EOF

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.8.4"

    - name: Terraform Init
      run: terraform -chdir=infra init -input=false

    - name: Terraform Plan
      run: |
        terraform -chdir=infra plan  \
             -var="sa_key_b64=${{ secrets.YC_SA_KEY_BS64 }}" \
             -var="cloud_id=${{ secrets.YC_CLOUD_ID }}" \
             -var="folder_id=${{ secrets.YC_FOLDER_ID }}" \
             -var="zone=${{ secrets.YC_ZONE }}"
    - name: Terraform Apply
      run: |
        terraform -chdir=infra apply -auto-approve -input=false \
             -var="sa_key_b64=${{ secrets.YC_SA_KEY_BS64 }}" \
             -var="cloud_id=${{ secrets.YC_CLOUD_ID }}" \
             -var="folder_id=${{ secrets.YC_FOLDER_ID }}" \
             -var="zone=${{ secrets.YC_ZONE }}"

  build-and-push:
    needs: tf
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore SA key from Base64
        shell: bash
        run: |
          printf '%s' "${{ secrets.YC_SA_KEY_BS64 }}" | base64 -d > key.json
          echo "YC_SERVICE_ACCOUNT_KEY_FILE=$(pwd)/key.json" >> $GITHUB_ENV

      - name: Install Yandex Cloud CLI
        shell: bash
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          # подхватит PATH для следующих шагов
          echo "PATH=$HOME/yandex-cloud/bin:$PATH" >> $GITHUB_ENV

      - name: Verify yc
        run: |
          which yc
          yc --version

      - name: Configure Yandex CLI
        run: |
          yc config set service-account-key key.json
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
          yc config set compute-default-zone ${{ secrets.YC_ZONE }}

      - name: Configure Docker to use Yandex Container Registry
        run: |
          yc container registry configure-docker

      - name: Build Docker image
        run: |
          IMAGE=cr.yandex/${{ secrets.YC_REGISTRY_ID }}/my-app:${{ github.sha }}
          docker build -t "$IMAGE" -f app/Dockerfile.python app/
          echo "Image tagged as $IMAGE"
          docker push "$IMAGE"